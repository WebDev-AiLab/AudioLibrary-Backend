"""
Django settings for audiolibrary_django project.

Generated by 'django-admin startproject' using Django 3.2.8.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
from settings.utils import load_env

BASE_DIR = Path(__file__).resolve().parent.parent
get_env = os.environ.get
load_env(BASE_DIR / ".env")
print(load_env)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-trj)sw9k7eb)syo9_auhoxproxq^l8+^f^%jl1xx^hcygh(i)o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = bool(int(get_env("DEBUG", "1")))

ALLOWED_HOSTS = [
    'localhost',
    '127.0.0.1',
    '*'
]

# only for admin panel
CSRF_TRUSTED_ORIGINS = [
    'https://audiolibrarybackend.agrachyov.com'
]

# Application definition

INSTALLED_APPS = [
    # 'django_select2',
    'rest_framework',
    'rest_framework_simplejwt',
    'django_filters',
    'django_extensions',
    'corsheaders',
    'rest_framework_swagger',
    'drf_yasg',
    # "django.contrib.sites",
    # "django.contrib.flatpages",
    # "invitations",
    # 'django_light',
    # 'grappelli',
    # 'filebrowser',
    # 'tinymce',
    'ckeditor',
    'accounts.apps.AccountsConfig',
    'tracks.apps.TracksConfig',
    'interactions.apps.InteractionsConfig',
    'comments.apps.CommentsConfig',
    'subscriptions.apps.SubscriptionsConfig',
    'images.apps.ImagesConfig',
    'pages.apps.PagesConfig',
    'news.apps.NewsConfig',
    'upload.apps.UploadConfig',
    'offers.apps.OffersConfig',
    # 'dal',
    # 'dal_select2',
    # 'jet',
    # ...
    "admin_interface",
    "colorfield",
    "related_admin",
    # 'admin_volt.apps.AdminVoltConfig',
    # "jazzmin",
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'nested_inline',
    'treebeard',
    'adminsortable2'
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'accounts.middleware.block_ip_middleware'
]

ROOT_URLCONF = 'audiolibrary_django.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [
            'templates'
        ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.request'
            ],
        },
    },
]

WSGI_APPLICATION = 'audiolibrary_django.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2',
        'NAME': 'audio',
        'USER': 'postgres',
        'PASSWORD': 'kevs',
        'HOST': 'db',
        'PORT': '5432',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# for serving static files (copy-pasted from stackoverflow)
STATIC_ROOT = 'static/'
MEDIA_ROOT = 'media/'

# temporary...
# MEDIA_URL = 'https://audiolibrarybackend.agrachyov.com/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# CORS and stuff

CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_ALL_ORIGINS = False
CORS_ORIGIN_WHITELIST = [
    'http://localhost:3000',
    'http://localhost:3001',
    'http://localhost:3008',
    'http://192.168.100.2:3008',
    'https://audiolibraryfrontend.agrachyov.com'
]
CORS_ALLOW_HEADERS = [
    "accept",
    "accept-encoding",
    "authorization",
    "content-type",
    "dnt",
    "origin",
    "user-agent",
    "x-csrftoken",
    "x-requested-with",

    # cache-related stuff
    'cache-control',
    'expires',
    'pragma'
]

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_RENDERER_CLASSES': [
        'rest_framework.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ],
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication'
    ],
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 20,
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema'
}

USE_X_FORWARDED_HOST = True
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

from PIL import ImageFile

ImageFile.LOAD_TRUNCATED_IMAGES = True

THUMBNAIL_SIZE = (300, 300)

# only if django version >= 3.0
X_FRAME_OPTIONS = "SAMEORIGIN"
SILENCED_SYSTEM_CHECKS = ["security.W019"]

DATA_UPLOAD_MAX_NUMBER_FIELDS = None

SITE_URL = get_env('SITE_URL')
SITE_URL_FRONTEND = get_env('SITE_URL_FRONTEND')

FRONTEND = {
    'verification_url': str(SITE_URL_FRONTEND) + '/?_action=verify&',
    'password_restore_url': str(SITE_URL_FRONTEND) + '/?_action=restore&'
}

FORUM_URL = get_env('FORUM_URL') or 'http://localhost:80'
FORUM_CANARY = get_env('FORUM_CANARY') or 'c7^DL!eAAdk$9b7EHxHpL3jj4PzsYG38bCkUPGgki8K2@zZMk'

# deprecated, since we do not use misago anymore
MISAGO_URL = 'http://localhost:8000'

SITE_ID = 1

# PASSWORD_HASHERS = [
#     'accounts.hashers.CustomPasswordHasher'
# ]


SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Token': {
            'type': 'apiKey',
            'name': 'Authorization',
            'in': 'header'
        },
    },
    'USE_SESSION_AUTH': False
}