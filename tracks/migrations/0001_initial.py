# Generated by Django 4.0.4 on 2022-06-07 13:24

from django.db import migrations, models
import django.db.models.deletion
import tools.upload
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created date')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated date')),
                ('location', models.CharField(blank=True, help_text='Free-form query string to search for', max_length=1024, null=True)),
                ('location_latitude', models.FloatField(blank=True, null=True)),
                ('location_longitude', models.FloatField(blank=True, null=True)),
                ('name', models.CharField(max_length=512, unique=True, verbose_name='Artist Name')),
                ('picture', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('artist'))),
                ('picture_thumbnail', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('thumbnail'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created date')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated date')),
                ('name', models.CharField(max_length=512, unique=True, verbose_name='Genre')),
                ('picture', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('genre'))),
                ('picture_thumbnail', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('thumbnail'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created date')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated date')),
                ('name', models.CharField(max_length=512, unique=True, verbose_name='Label name')),
                ('picture', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('label'))),
                ('picture_thumbnail', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('thumbnail'))),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Style',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created date')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated date')),
                ('name', models.CharField(max_length=255)),
                ('is_default', models.BooleanField(default=False)),
                ('genre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='tracks.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created date')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated date')),
                ('slug', models.SlugField(default=None, max_length=255, null=True, unique=True)),
                ('original_file_name', models.CharField(default='track.mp3', max_length=2048)),
                ('file', models.FileField(help_text='.mp3 file location', upload_to=tools.upload.ModifyUpload('file'), verbose_name='.MP3 File')),
                ('waveform', models.FileField(help_text='Link to file with waveform data', upload_to=tools.upload.ModifyUpload('waveform'))),
                ('picture', models.ImageField(upload_to=tools.upload.ModifyUpload('track'))),
                ('picture_thumbnail', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('thumbnail'))),
                ('title', models.CharField(blank=True, max_length=2048, null=True, verbose_name='Track title')),
                ('original_artist', models.CharField(blank=True, help_text='Contains artist field from .mp3 tag', max_length=1024, null=True, verbose_name='Artist')),
                ('album', models.CharField(blank=True, db_index=True, max_length=1024, null=True)),
                ('album_artist', models.CharField(blank=True, max_length=1024, null=True)),
                ('type', models.CharField(choices=[('vocal', 'Vocal'), ('non-vocal', 'Non-Vocal')], db_index=True, default='vocal', max_length=16)),
                ('BPM', models.IntegerField(blank=True, null=True)),
                ('year', models.IntegerField(blank=True, null=True)),
                ('duration', models.FloatField(help_text='Retrieved track duration in seconds', null=True, verbose_name='Length')),
                ('rating', models.CharField(blank=True, max_length=5, null=True, verbose_name='Class')),
                ('remixes', models.CharField(blank=True, max_length=255, null=True)),
                ('lyrics', models.TextField(blank=True, null=True)),
                ('celery_upload_status', models.IntegerField(choices=[(0, 'PENDING'), (1, 'PROCESSING'), (2, 'FAILED'), (3, 'SUCCESS')], db_index=True, default=0, help_text='Processing status. All tracks are processed in the background after upload. If everything is successful, then the status will be "success", if not - "failed". This field is filled during processing and cannot be changed manually.', verbose_name='Celery upload status')),
                ('plays_count', models.IntegerField(default=0, editable=False, verbose_name='Plays')),
                ('votes_count', models.IntegerField(default=0, editable=False, verbose_name='Likes')),
                ('artist', models.ManyToManyField(help_text='Parsed artists from "Compositor" tag or filename.', related_name='tracks', to='tracks.artist', verbose_name='Artist list')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracks', to='tracks.genre')),
                ('label', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracks', to='tracks.label')),
                ('style', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tracks', to='tracks.style')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, db_index=True, null=True, verbose_name='Created date')),
                ('updated', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Updated date')),
                ('title', models.CharField(max_length=512, unique=True, verbose_name='Album title')),
                ('original_artist', models.CharField(blank=True, max_length=1024, null=True)),
                ('album_artist', models.CharField(blank=True, max_length=1024, null=True)),
                ('picture', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('album'))),
                ('picture_thumbnail', models.FileField(blank=True, null=True, upload_to=tools.upload.ModifyUpload('thumbnail'))),
                ('year', models.IntegerField(blank=True, null=True)),
                ('artist', models.ManyToManyField(related_name='albumd', to='tracks.artist')),
                ('genre', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='tracks.genre')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
